<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Overview on Javascript30</title>
    <link>https://alicegherbison.github.io/javascript30/</link>
    <description>Recent content in Overview on Javascript30</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="https://alicegherbison.github.io/javascript30/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AJAX type ahead üîÆ</title>
      <link>https://alicegherbison.github.io/javascript30/day06/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day06/</guid>
      <description> fetch() method Javascript promises ES6 spreads changes events only fire when you go off the element RegExp()&amp;#39;&amp;#39; object global and insensitive flags for regex objects  </description>
    </item>
    
    <item>
      <title>Array cardio I üí™</title>
      <link>https://alicegherbison.github.io/javascript30/day04/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day04/</guid>
      <description>all the array functions like filter, sort etc console.table() function slightly more clarity around arrow/inline functions &amp;amp; ternery operators .map() will always return the same number of array items that it takes in template strings  This was a very light introduction to array methods and I don&amp;rsquo;t think I fully grasp them yet.</description>
    </item>
    
    <item>
      <title>Array cardio II üí™üí™</title>
      <link>https://alicegherbison.github.io/javascript30/day07/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day07/</guid>
      <description>putting curly brackets round a variable in console.log() shows the name of the value  This challenge was completely filled with new array methods. I think it will be useful to return to in the future as a reference. Again the ES6 syntax was a little hard to grasp.</description>
    </item>
    
    <item>
      <title>Console tricks ‚ú®</title>
      <link>https://alicegherbison.github.io/javascript30/day09/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day09/</guid>
      <description>string interpolation debugging/pausing using the console passing in arguments to console.log() to style the text in the console console.warn() console.error() console.info() console.assert() console.dir() console.group()&amp;rdquo;, console.groupCollapse()  Right at the end of this one was a brief look at fetching data from an API. I want to explore that further in a personal project.</description>
    </item>
    
    <item>
      <title>Custom HTML5 video player üì∫</title>
      <link>https://alicegherbison.github.io/javascript30/day11/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day11/</guid>
      <description>:fullscreen pseudo class step attribute for slider elements That you can call querySelector() on node/object variables video element paused property Accessing data attributes with dataset parseFloat() method timeupdate video event Using ES6 function arrow notation to check if a variable is set to true before continuing running the function  While still a bit iffy on arrow functions (and it&amp;rsquo;s clear that&amp;rsquo;s an area I need to revise in-depth), I was able to build out additional functionality with a mute button.</description>
    </item>
    
    <item>
      <title>Drum kit üéº</title>
      <link>https://alicegherbison.github.io/javascript30/day01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day01/</guid>
      <description>&amp;lt;kbd&amp;gt; element exists for keyboard input transition events and their objects that there are functions and properties available for specific elements e.g. .play(); and .currentTime  It also took me a little while to realise that the numerical value of the data-key attribute on the &amp;lt;div&amp;gt; and &amp;lt;audio&amp;gt; elements isn&amp;rsquo;t technically the same thing as the keyCode value generated from the keyDown event - they&amp;rsquo;re just the same number being used to link the two together.</description>
    </item>
    
    <item>
      <title>Flex panels image gallery üåÑ</title>
      <link>https://alicegherbison.github.io/javascript30/day05/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day05/</guid>
      <description>more handling of event objects e.propertyName.includes(&amp;#39;&amp;#39;) check  I really like the practical applications of these small transition effects. This was another quite fast-paced tutorial but lays the ground for lots of fun ideas for animation page items.</description>
    </item>
    
    <item>
      <title>HTML5 canvas üé®</title>
      <link>https://alicegherbison.github.io/javascript30/day08/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day08/</guid>
      <description>the context is what is drawn on, and this can be 2D or 3D ES6 functions can be inline or block&amp;lt;  Loved this one.</description>
    </item>
    
    <item>
      <title>Hold shift to check multiple checkboxes ‚òëÔ∏è</title>
      <link>https://alicegherbison.github.io/javascript30/day10/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day10/</guid>
      <description>Input Checkbox checked Property and how to set it  The logic to this one was really clever. The event objects have more capability than I realised, and being able to set checkboxes to checked via Javascript is easier than expected.</description>
    </item>
    
    <item>
      <title>JS &#43; CSS clock üïô</title>
      <link>https://alicegherbison.github.io/javascript30/day02/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day02/</guid>
      <description>transform-origin CSS property transition-timing-function CSS property and the cubic bezier explorer tool in Google Chrome Developer Tools setInterval() function Date object getSeconds(), getMinutes(), getHours() functions CSS gradients  I reskinned the provided clock to match a real one sold on Trouva and am very happy with the result.</description>
    </item>
    
    <item>
      <title>Key sequence detection üîç</title>
      <link>https://alicegherbison.github.io/javascript30/day12/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day12/</guid>
      <description>join() method to convert arrays to strings includes() method  The splice calcuation blew my mind a little. I don&amp;rsquo;t think I could have figured out how to calculate/return the user&amp;rsquo;s typed input on my own.
(The secret code to type is &amp;lsquo;unicorn&amp;rsquo;).</description>
    </item>
    
    <item>
      <title>Local storage &amp; event delegation</title>
      <link>https://alicegherbison.github.io/javascript30/day15/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day15/</guid>
      <description> submit event listener ES6 shorthand for assigning object properties Form elements reset() method localStorage converts things to strings That you can use OR operators in variable assignments Event delegation e.target matches() method from the browser API  </description>
    </item>
    
    <item>
      <title>Mouse move shadow üê≠</title>
      <link>https://alicegherbison.github.io/javascript30/day16/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day16/</guid>
      <description>contenteditable HTML attribute That you can use document.querySelector() on an element that you&amp;rsquo;ve already selected using it How to adjust for the offset of the target element when hovering over those that are nested within others  This is incredibly clever. Before it started I thought the solution would be simple, but it really isn&amp;rsquo;t and I couldn&amp;rsquo;t have figured out the maths for this! It seems useful for some fun page styling, so glad to know how it&amp;rsquo;s possible.</description>
    </item>
    
    <item>
      <title>References vs copying üë•</title>
      <link>https://alicegherbison.github.io/javascript30/day14/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day14/</guid>
      <description> If you update an referenced array or object it will always reference back to the original Empty slice() method with no arguments returns a copy of all the array data, concat() and ES6 spread work similarly Using assign() creates a copy for objects, but only 1 level deep Using JSON.parse() and JSON.clone() can make a deep copy but isn&amp;rsquo;t recommended  </description>
    </item>
    
    <item>
      <title>Scoped CSS variables &amp; JS üîÖüîÜ</title>
      <link>https://alicegherbison.github.io/javascript30/day03/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day03/</guid>
      <description>filter CSS property NodeList forEach() method change event a dataset object is an object that contains all the data attributes from a particular element  The solution to this day&amp;rsquo;s challenge was simple, but required previous knowledge of ES6 syntax and methods so the learning curve was a little steep.</description>
    </item>
    
    <item>
      <title>Slide in on scroll üîú</title>
      <link>https://alicegherbison.github.io/javascript30/day13/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day13/</guid>
      <description>scroll event listener Performance issues with detecting scroll &amp;amp; the need for debouncing That you can set default function argument values as initial arguments (I think I already knew this but definitely a great refresher/example) window.scrollY and offsetTop properties How to access the height and width of DOM elements  It was really helpful to learn how the different properties of the images and the window can be used to calculate positions and heights.</description>
    </item>
    
    <item>
      <title>Sorting without articles üî§</title>
      <link>https://alicegherbison.github.io/javascript30/day17/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day17/</guid>
      <description>sort() method on arrays and how to pass a function with two options to compare Regex for stripping &amp;ldquo;a&amp;rdquo;, &amp;ldquo;the&amp;rdquo; or &amp;ldquo;an&amp;rdquo; and how to make it insensitive Setting an array to innerHTML will call toString() and put a comma between each item - so using join(&amp;#39;&amp;#39;) will remove the commas  I kept my version of the code without ES6 as much as possible for readability (until I can better grasp ternerary operators, arrow functions and implicit returns at a glance without my brain exploding).</description>
    </item>
    
    <item>
      <title>Tally string times with reduce ‚ûï</title>
      <link>https://alicegherbison.github.io/javascript30/day18/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day18/</guid>
      <description>How to split out the time in minutes and seconds, convert to float and total them  My main learning from this is how methods can be strung together to perform several things at once - the solution here is quite elegant.</description>
    </item>
    
    <item>
      <title>Webcam fun üé•</title>
      <link>https://alicegherbison.github.io/javascript30/day19/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://alicegherbison.github.io/javascript30/day19/</guid>
      <description>Passing an image&amp;rsquo;s data into HREF gives you an image  There&amp;rsquo;s so much in this tutorial - not just the image manipulation but how to grab the webcam data and get it back on the page. Basically absolutely everything in this was a new thing.</description>
    </item>
    
  </channel>
</rss>